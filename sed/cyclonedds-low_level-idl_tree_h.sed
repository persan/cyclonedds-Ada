s!subtype idl_type_t is idl_type;.*!!
s!subtype idl_type is unsigned;!type idl_type_t is new unsigned;!
s!constant idl_type !constant idl_type_t!

s!access idl_annotation_appl;!access idl_annotation_appl_t;!

s!subtype idl_autoid_t is idl_autoid;.*!!
s!type idl_autoid is!type idl_autoid_t is!


s!subtype idl_extensibility_t is idl_extensibility;.*!!
s!type idl_extensibility is!type idl_extensibility_t is!


s!subtype idl_boolean_t is idl_boolean;.*!!
s!type idl_boolean is!type idl_boolean_t is!

s!access idl_name;!access idl_name_t;!

#####################################################################
# Autogenerated with:
#import re
#TEMPLATE = """
#s!type %(name)s;!!
#s!subtype %(name)s_t is %(name)s;.*!!
#s!type %(name)s is record!type %(name)s_t is record!
#"""
#
#with open("src/gen/cyclonedds-low_level-idl_tree_h.ads", "r") as inf:
#    for line in inf:
#        m = re.match(r"\s+type (\S+);", line)
#        if m:
#            print (TEMPLATE % {"name":m.group(1)})
#####################################################################

s!type idl_name;!!
s!subtype idl_name_t is idl_name;.*!!
s!type idl_name is record!type idl_name_t is record!


s!type idl_scoped_name;!!
s!subtype idl_scoped_name_t is idl_scoped_name;.*!!
s!type idl_scoped_name is record!type idl_scoped_name_t is record!


s!type idl_field_name;!!
s!subtype idl_field_name_t is idl_field_name;.*!!
s!type idl_field_name is record!type idl_field_name_t is record!


s!type idl_node;!!
s!subtype idl_node_t is idl_node;.*!!
s!type idl_node is record!type idl_node_t is record!


s!type idl_annotation_appl;!!
s!subtype idl_annotation_appl_t is idl_annotation_appl;.*!!
s!type idl_annotation_appl is record!type idl_annotation_appl_t is record!


s!type idl_path;!!
s!subtype idl_path_t is idl_path;.*!!
s!type idl_path is record!type idl_path_t is record!


s!type idl_id;!!
s!subtype idl_id_t is idl_id;.*!!
s!type idl_id is record!type idl_id_t is record!


s!type idl_nested;!!
s!subtype idl_nested_t is idl_nested;.*!!
s!type idl_nested is record!type idl_nested_t is record!


s!type idl_const;!!
s!subtype idl_const_t is idl_const;.*!!
s!type idl_const is record!type idl_const_t is record!


s!type idl_literal;!!
s!subtype idl_literal_t is idl_literal;.*!!
s!type idl_literal is record!type idl_literal_t is record!


s!type idl_base_type;!!
s!subtype idl_base_type_t is idl_base_type;.*!!
s!type idl_base_type is record!type idl_base_type_t is record!


s!type idl_sequence;!!
s!subtype idl_sequence_t is idl_sequence;.*!!
s!type idl_sequence is record!type idl_sequence_t is record!


s!type idl_string;!!
s!subtype idl_string_t is idl_string;.*!!
s!type idl_string is record!type idl_string_t is record!


s!type idl_module;!!
s!subtype idl_module_t is idl_module;.*!!
s!type idl_module is record!type idl_module_t is record!


s!type idl_declarator;!!
s!subtype idl_declarator_t is idl_declarator;.*!!
s!type idl_declarator is record!type idl_declarator_t is record!


s!type idl_member;!!
s!subtype idl_member_t is idl_member;.*!!
s!type idl_member is record!type idl_member_t is record!


s!type idl_inherit_spec;!!
s!subtype idl_inherit_spec_t is idl_inherit_spec;.*!!
s!type idl_inherit_spec is record!type idl_inherit_spec_t is record!


s!type idl_key;!!
s!subtype idl_key_t is idl_key;.*!!
s!type idl_key is record!type idl_key_t is record!


s!type idl_keylist;!!
s!subtype idl_keylist_t is idl_keylist;.*!!
s!type idl_keylist is record!type idl_keylist_t is record!


s!type idl_struct;!!
s!subtype idl_struct_t is idl_struct;.*!!
s!type idl_struct is record!type idl_struct_t is record!


s!type idl_case_label;!!
s!subtype idl_case_label_t is idl_case_label;.*!!
s!type idl_case_label is record!type idl_case_label_t is record!


s!type idl_case;!!
s!subtype idl_case_t is idl_case;.*!!
s!type idl_case is record!type idl_case_t is record!


s!type idl_switch_type_spec;!!
s!subtype idl_switch_type_spec_t is idl_switch_type_spec;.*!!
s!type idl_switch_type_spec is record!type idl_switch_type_spec_t is record!


s!type idl_union;!!
s!subtype idl_union_t is idl_union;.*!!
s!type idl_union is record!type idl_union_t is record!


s!type idl_enumerator;!!
s!subtype idl_enumerator_t is idl_enumerator;.*!!
s!type idl_enumerator is record!type idl_enumerator_t is record!


s!type idl_enum;!!
s!subtype idl_enum_t is idl_enum;.*!!
s!type idl_enum is record!type idl_enum_t is record!


s!type idl_typedef;!!
s!subtype idl_typedef_t is idl_typedef;.*!!
s!type idl_typedef is record!type idl_typedef_t is record!


s!type idl_annotation_member;!!
s!subtype idl_annotation_member_t is idl_annotation_member;.*!!
s!type idl_annotation_member is record!type idl_annotation_member_t is record!


s!type idl_annotation;!!
s!subtype idl_annotation_t is idl_annotation;.*!!
s!type idl_annotation is record!type idl_annotation_t is record!


s!type idl_annotation_appl_param;!!
s!subtype idl_annotation_appl_param_t is idl_annotation_appl_param;.*!!
s!type idl_annotation_appl_param is record!type idl_annotation_appl_param_t is record!


s!type idl_node_t is record!   type idl_annotation_appl_t;\
type idl_node_t is record!
